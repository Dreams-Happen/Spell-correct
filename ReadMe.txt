Word.javaThis class is used for the misspelled words in the input file. The class consists of a String that is the constructor, a Boolean, ignored, which is true if the user wants to ignore all misspellings of the word, another string, replacement, that is the word that the user wants to replace the misspelled word with and finally there is an array called Suggestions. This array holds all of the suggestions for the replacement of the misspelled word. The class also contains an equals() method and hashcode() method for the hash table. driver.javaIn this driver, a dictionary is imported via the command line. The user is then prompted to give a .txt file. The user is then prompted to either go through each word or to enter a new file. The user could quit at any time. If the user decides to go through each word, each misspelled word will pop up and the program will give 4 options to the user. The user can either ignore all instances of this word, replace all instances of this word, pass it, or quit. If the user decides to replaceAll(), suggestions will be generated from which the user can choose from. If the user does not like any of the suggestions, they can simply pass. There are times when no suggestions can be made. This driver implements 5 different ways to create suggestions including swap(), insert(), delete(), replace() and capitalize().  After all files have been read in, the driver will write two files for each file that the user input. One file will consist of the contents of the original file, except with any replacements made by the user. The second file consists of all the misspelled words in the original file with the line number in order. The replace all feature of the driver actually replaces all instances of the misspelled word, including those that the user already passed. 